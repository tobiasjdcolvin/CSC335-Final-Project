package view;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import model.LoginModel;
import controller.LoginController;

public class LoginView extends JFrame {
    private JTextField loginUsername;
    private JTextField loginPassword;
    private JTextField registerUsername;
    private JTextField registerPassword;
    private LoginController controller;

    public LoginView() {
        this.controller = new LoginController(new LoginModel(this));
        controller.setMyView(this);
        this.setTitle("Login / Register");
        this.setSize(800,600);
        this.setLocationRelativeTo(null); // centers the window - generated by AI
        this.setUp();
        this.setVisible(true);
    }


    private void setUp() {
        JPanel mainPanel = new JPanel(new BorderLayout()); // layout generated by AI
        mainPanel.setBackground(Color.darkGray);
        mainPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20)); // border generated by AI
        this.add(mainPanel);

        // center content panel (layout generated by AI)
        JPanel centerPanel = new JPanel();
        centerPanel.setBackground(Color.darkGray);
        centerPanel.setLayout(new BoxLayout(centerPanel, BoxLayout.Y_AXIS)); // layout generated by AI

        JLabel titleLabel = new JLabel("Login or Register");
        titleLabel.setForeground(Color.LIGHT_GRAY);
        titleLabel.setFont(new Font("Comic Sans MS", Font.BOLD, 24));
        titleLabel.setAlignmentX(Component.CENTER_ALIGNMENT); // alignment generated by AI
        centerPanel.add(titleLabel);

        // bottom panel (layout generated by AI)
        JPanel bottomPanel = new JPanel();
        bottomPanel.setBackground(Color.darkGray);
        bottomPanel.setLayout(new BoxLayout(bottomPanel, BoxLayout.Y_AXIS)); // layout generated by AI

        loginUsername = new JTextField(20);
        loginUsername.setMaximumSize(new Dimension(200, 30));
        loginUsername.setAlignmentX(Component.CENTER_ALIGNMENT); // alignment is AI generated

        loginPassword = new JTextField(20);
        loginPassword.setMaximumSize(new Dimension(200, 30));
        loginPassword.setAlignmentX(Component.CENTER_ALIGNMENT); // alignment is AI generated

        JButton login = new JButton("Login");
        login.setActionCommand("login");
        login.addActionListener(controller);
        login.setAlignmentX(Component.CENTER_ALIGNMENT); // alignment is AI generated

        registerUsername = new JTextField(20);
        registerUsername.setMaximumSize(new Dimension(200, 30));
        registerUsername.setAlignmentX(Component.CENTER_ALIGNMENT); // alignment is AI generated

        registerPassword = new JTextField(20);
        registerPassword.setMaximumSize(new Dimension(200, 30));
        registerPassword.setAlignmentX(Component.CENTER_ALIGNMENT); // alignment is AI generated

        JButton register = new JButton("Register");
        register.setActionCommand("register");
        register.addActionListener(controller);
        register.setAlignmentX(Component.CENTER_ALIGNMENT); // alignment is AI generated

        centerPanel.add(loginUsername);
        centerPanel.add(loginPassword);
        centerPanel.add(Box.createRigidArea(new Dimension(0, 10))); // AI generated
        bottomPanel.add(Box.createRigidArea(new Dimension(0, 10))); // AI generated
        centerPanel.add(login);
        centerPanel.add(registerUsername);
        centerPanel.add(registerPassword);
        centerPanel.add(Box.createRigidArea(new Dimension(0, 10))); // AI generated
        bottomPanel.add(Box.createRigidArea(new Dimension(0, 10))); // AI generated
        centerPanel.add(register);

        // add panels to main panel
        mainPanel.add(centerPanel, BorderLayout.CENTER); // AI generated layout
        mainPanel.add(bottomPanel, BorderLayout.SOUTH); // AI generated layout


        //adding a window listener for closing the app
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent windowEvent) {
                System.exit(0);
            }
        });

        this.setVisible(true);
    }

    public String getLoginUsername() {
        return this.loginUsername.getText();
    }
    public String getLoginPassword() {
        return this.loginPassword.getText();
    }

    public String getRegisterUsername() {
        return this.registerUsername.getText();
    }
    public String getRegisterPassword() {
        return this.registerPassword.getText();
    }


    public static void main(String[] args) {
        new View();
    }
}

